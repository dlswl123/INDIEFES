<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="art">

	<!-- 앨범정보입력 -->
	<insert id="insert">
		insert into art_info (art_number, art_genre, user_id, team_number,art_title,art_cover,art_pr)
		values (seq_art.nextval,#{art_genre},#{user_id},#{team_number},#{art_title},#{art_cover},#{art_pr})
	</insert>
	<select id="artInfo" resultType="ArtInfoVo">
		select * 
		from art_info
		where art_number = 
		(select max(art_number)
		 from art_info 
		 where team_number = #{team_number})
	</select>
	
	<!-- 팀등록 -->
	<insert id="teamInsert">
		insert into indie_team (team_number, art_team)
		values (seq_team.nextval,#{art_team})
	</insert>
	
	<!-- 팀멤버 등록 -->
	<insert id="memberInsert">
		insert into team_member (member_number, team_number,user_id,team_level,user_nick)
			<if test = "team_level == 0">
				values (seq_member.nextval,seq_team.currval,#{user_id},#{team_level},#{user_nick})
			</if>
			<if test = "team_level == 1">
				values (seq_member.nextval,#{team_number},#{user_id},#{team_level},#{user_nick})
			</if>
	</insert>
	
<!-- 	앨범정보 읽기 -->
	<select id="artRead" resultType="ArtInfoVo">
		select * 
		from art_info
		where art_number = #{art_number}
	</select>
	
<!-- 	앨범정보 수정폼 -->
	<select id="artModifyFrom" resultType="ArtInfoVo">
		select * 
		from art_info
		where user_id = #{user_id}
		and art_number = #{art_number}
	</select>
	
<!-- 	앨범수정하기 -->
	<update id="artModify">
		update art_info set
			art_genre = #{art_genre},
			art_title = #{art_title},
			art_cover = #{art_cover},
			art_pr = #{art_pr}
		where art_number = #{art_number}
		and user_id = #{user_id}
	</update>
	
<!-- 	앨범 삭제하기 -->
	<update id="artDelete">
		update art_info set
			upload_check = 99
		where art_number = #{art_number}
		and user_id = #{user_id}
	</update>
	
<!-- 	앨범 리스트 가져오기 -->
	<select id="artList" resultType="ArtInfoVo">
		select *
		from (select rownum rnum, a.*
		      from (select distinct art.* 
		      		from art_info art
		      <include refid="search"></include>
		      order by art.art_number desc) a)
		where rnum &gt;= #{startRow} and rnum &lt;= #{endRow}
	</select>
	
<!-- 	인디팀 불러오기 -->
	<select id="getIndieTeam" resultType="IndieTeamVo">
		select *
		from indie_team
		order by team_number
	</select>
	
<!-- 	앨범커버 리스트 불러오기 -->
	<select id="getCover" resultType="string">
		select art_cover
		from art_info
		order by art_number desc
	</select>
	
<!-- 	그룹넘버 가져오기 -->
	<select id="getIndieNumber" resultType="integer">
		select team_number
		from team_member
		where user_id = #{user_id}
	</select>
	
<!-- 	그룹이름 가져오기 -->
	<select id="getTeamName" resultType="string">
		select art_team
		from indie_team
		where team_number = #{team_number}
	</select>
<!-- 	그룹정보 읽기 -->
	<select id="memberList" resultType="TeamMemberVo">
		select * 
		from team_member
		where team_number = #{team_number}
		order by member_number
	</select>
<!-- 	그룹앨범 리스트 가져오기 -->
	<select id="teamArtList" resultType="ArtInfoVo">
		select *
		from art_info
		where team_number = #{team_number}
		order by reg_art desc
	</select>
	
<!-- 	페이징갯수 -->
	<select id="artCount" resultType="int">
		select count(*) 
		from art_info art
		<include refid="search"></include>
	</select>
	
<!-- 	검색 중복부분 -->
	<sql id="search">
       	<if test="searchType != null">
       		<if test="searchType == 'albumName'">
            	where art_title like '%' || #{keyword} || '%'
   			</if>
	   		<if test="searchType == 'song'">
	   			, music_info m
	            where art.art_number = m.art_number
	            and m.music_title like '%' || #{keyword} || '%'
	   		</if>
	   		<if test="searchType == 'indieTeam'">
	            where art.team_number = (select team_number
	                                     from indie_team i
	                                     where i.art_team like '%' || #{keyword} || '%'
	                                     group by i.team_number)
	   		</if>
	   		<if test="searchType == 'artGenre'">
	   			where art.art_genre like '%' || #{keyword} || '%'
	   		</if>
	   		<if test="searchType == 'appro'">
	   			 where upload_check = #{keyword}
	   		</if>
	   		<if test="searchType == 'working'">
	   			 where upload_check = #{keyword}
	   		</if>
	   		<if test="searchType == 'delete'">
	   			 where upload_check = #{keyword}
	   		</if>
       	</if>
	</sql>
	
<!-- 	리스트에 노래 가져오기 -->
	<select id="playList" resultType="MusicInfoVo">
		select *
		from music_info
		where music_number in (select music_number
							  from play_list
							  where user_id = #{user_id})
		order by music_number					  
	</select>
<!-- 	플레이 리스트 -->
	<select id="playListInfo" resultType="PlayListVo">
		select * from play_list
		where user_id = #{user_id}
		order by music_number
	</select>
<!-- 	노래 리스트 등록 -->
	<delete id="playInsert">
		insert into play_list(user_id,music_number,play_index)
		values (#{user_id},#{music_number},seq_playlist.nextval)
	</delete>
<!-- 	노래 리스트 삭제 -->
	<delete id="playDelete">
		delete from play_list
		where play_index = #{play_index} 
	</delete>
<!-- 	최신 앨범 -->
	<select id="toDayList" resultType="ArtInfoVo">
		select * from art_info
		where reg_art > (sysdate-7)
		order by art_number desc
	</select>
<!-- 	인기 앨범 -->
	<select id="goodList" resultType="ArtInfoVo">
		select *
		from art_info
		where rownum &lt; 100
		order by good_count desc
	</select>
	<!-- 카트에 담기 -->
	<insert id="cartInput">
		insert into pay_log (user_id, music_number, music_title)
		values (#{user_id},#{music_number},#{music_title})
	</insert>
	<!-- 결제 목록 -->
	<select id="payList" resultType="PayLogVo">
		select * from pay_log
		where user_id = #{user_id}
		order by music_title
	</select>
	<!-- 결제 목록 삭제-->
	<delete id="payDelete">
		delete from pay_log
		where user_id = #{user_id}
		and music_number = #{music_number}
		and pay_ok = 0
	</delete>
	<!-- 결제 하기 -->
	<update id="payOk">
		update pay_log set
			pay_ok = 1,
			pay_date = sysdate
		where user_id = #{user_id}
	</update>
	
<!-- 	앨범승인요청 -->
	<update id="artUploadApproReq">
		update art_info set
			upload_check = 2
		where art_number = #{art_number}
		and user_id = #{user_id}
	</update>
	
	<!-- 	앨범 업로드승인 -->
	<update id="artUploadAppro">
		update art_info set
			upload_check = 1,
			reg_art = sysdate
		where art_number = #{art_number}
	</update>
	
	<!-- 	앨범 업로드반려 -->
	<update id="artUploadReturn">
		update art_info set
			upload_check = 0
		where art_number = #{art_number}
	</update>
	

	
<!-- 	앨범에 좋아요 수정 -->
	<update id="artLikedCount">
		update art_info set
			liked_count = #{liked_count}
		where art_number = #{art_number}
	</update>
	
<!-- 	좋아요 하기 -->
	<insert id="artLikedInsert">
		insert into like_log(user_id, art_number)	
		values(#{user_id}, #{art_number})
	</insert>
	
<!-- 	좋아요 취소 -->
	<delete id="artLikedDelete">
		delete from like_log
		where art_number = #{art_number}
		and user_id = #{user_id}
	</delete>
	
<!-- 	좋아요 체크 -->
	<select id="artLikedCheckById" resultType="Integer">
		select count(*)
		from like_log
		where user_id = #{user_id}
		and art_number = #{art_number}
	</select>
		
<!-- 	해당앨범의 좋아요수  -->
	<select id="artLikedCountCheck" resultType="Integer">
		select liked_count
		from art_info
		where art_number = #{art_number}
	</select>
		
		
<!--	앨범에 추천수 수정 -->
	<update id="artGoodCount">
		update art_info set
			good_count = #{good_count}
		where art_number = #{art_number}
	</update>
	
<!-- 	추천 하기 -->
	<insert id="artGoodInsert">
		insert into good_log(user_id, art_number)	
		values(#{user_id}, #{art_number})
	</insert>
	
<!-- 	추천 취소 -->
	<delete id="artGoodDelete">
		delete from good_log
		where art_number = #{art_number}
		and user_id = #{user_id}
	</delete>
	
<!-- 	추천 체크 -->
	<select id="artGoodCheckById" resultType="Integer">
		select count(*)
		from good_log
		where user_id = #{user_id}
		and art_number = #{art_number}
	</select>
	
<!-- 	해당 앨범에 추천수 -->
	<select id="artGoodCountCheck" resultType="Integer">
		select good_count
		from art_info
		where art_number = #{art_number}
	</select>
</mapper>